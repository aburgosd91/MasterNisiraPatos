package com.nisira.dao;

import com.nisira.core.BaseDao;
import com.nisira.core.NisiraORMException;
import com.nisira.entidad.DZONADIAGRAMA;
import com.nisira.entidad.ZONA;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

public class DZONADIAGRAMADao extends BaseDao<DZONADIAGRAMA> {
	public DZONADIAGRAMADao() {
		super(DZONADIAGRAMA.class);
	}

	public DZONADIAGRAMA getPorClavePrimaria(int con,Integer IDEMPRESA, Integer IDSUCURSAL, Integer IDZONA, Integer CORDENADAX, Integer CORDENADAY) throws SQLException, NisiraORMException {
		List<DZONADIAGRAMA> l = listar(con,"IDEMPRESA = ? and IDSUCURSAL = ? and IDZONA = ? and CORDENADAX = ? and CORDENADAY = ? ", IDEMPRESA, IDSUCURSAL, IDZONA, CORDENADAX, CORDENADAY);
		if (l.isEmpty()) {
			return null;
		} else {
			return l.get(0);
		}
	}
	/*****************************************INICIO*******************************/
	public List<DZONADIAGRAMA> getLisZona(int con,Integer IDEMPRESA, Integer IDSUCURSAL, Integer IDZONA) throws SQLException {
		String sql= "select DZD.*,(CASE WHEN DZD.IDACCESORIO=0 AND DZD.IDALMACEN<>0 THEN '(AL) '+MALM.DESCRIPCION"
					+"			WHEN DZD.IDACCESORIO<>0 AND DZD.IDALMACEN=0 THEN '(AC) '+Z.DESCRIPCION"
					+"			WHEN DZD.IDACCESORIO=0 AND DZD.IDALMACEN<>0 THEN '(M) '+Z.DESCRIPCION"
					+"			ELSE '' END) as TIPO, DALD.IDRACK, ISNULL(MRCK.DESCRIPCION,'NO ASIGNADO') AS TIPORACK"
				+" from DZONADIAGRAMA DZD" 
				+" LEFT JOIN  ALMACEN A ON A.IDEMPRESA= DZD.IDEMPRESA AND A.IDSUCURSAL=DZD.IDSUCURSAL AND A.IDALMACEN=DZD.IDALMACEN AND A.ESTADO=1"
				+" LEFT JOIN MULTITABLA MALM ON MALM.DEP_ID=1 AND MALM.VALOR=A.IDTIPOALMACEN AND MALM.IDEMPRESA=DZD.IDEMPRESA AND MALM.ESTADO=1"
				+" INNER JOIN ZONA Z ON DZD.IDEMPRESA=Z.IDEMPRESA AND DZD.IDSUCURSAL=Z.IDSUCURSAL AND DZD.IDZONA=Z.IDZONA"
				+" INNER JOIN DALMACENDIAGRAMA DALD ON DALD.IDEMPRESA=DZD.IDEMPRESA AND DALD.IDSUCURSAL=DZD.IDSUCURSAL AND" 
				+" DALD.IDALMACEN=DZD.IDALMACEN AND DALD.IDDISTRIBUCION=DZD.IDDISTRIBUCION AND DALD.CORDENADAX=DZD.CORDENADAX AND DALD.CORDENADAY=DZD.CORDENADAY"
				+" AND DALD.COLORHEXADECIMAL= DZD.COLORHEXADECIMAL   "
				+" LEFT JOIN DALMACEN_RACKS DR ON DR.IDEMPRESA=DZD.IDEMPRESA AND DR.IDSUCURSAL=DZD.IDSUCURSAL AND DR.IDALMACEN=DZD.IDALMACEN" 
				+" AND DR.IDDISTRIBUCION=DZD.IDDISTRIBUCION AND DR.IDRACK=DALD.IDRACK  "
				+" LEFT JOIN MULTITABLA MRCK ON MRCK.DEP_ID=7 AND MRCK.VALOR=DR.IDTIPORACKS AND MRCK.IDEMPRESA=DZD.IDEMPRESA AND MRCK.ESTADO=1"
				+" where DZD.IDEMPRESA=? and DZD.IDSUCURSAL=? and DZD.IDALMACEN=? AND DZD.ESTADO=1"
				+" ORDER BY DZD.CORDENADAX,DZD.CORDENADAY";
	
		Connection cn = obtenerConexion(con);
		PreparedStatement ps = cn.prepareStatement(sql);
		ps.setInt(1, IDEMPRESA);
		ps.setInt(2, IDSUCURSAL);
		ps.setInt(3, IDZONA);
		
		ResultSet rs = ps.executeQuery();
		List<DZONADIAGRAMA> l = new ArrayList<DZONADIAGRAMA>(); 
		DZONADIAGRAMA dZONADIAGRAMA;
		while(rs.next()){
			dZONADIAGRAMA =new DZONADIAGRAMA();
			dZONADIAGRAMA.setIDEMPRESA(rs.getInt("IDEMPRESA"));
			dZONADIAGRAMA.setIDSUCURSAL(rs.getInt("IDSUCURSAL"));
			dZONADIAGRAMA.setIDZONA(rs.getInt("IDZONA"));
			dZONADIAGRAMA.setCORDENADAX(rs.getInt("CORDENADAX"));
			dZONADIAGRAMA.setCORDENADAY(rs.getInt("CORDENADAY"));
			dZONADIAGRAMA.setIDACCESORIO(rs.getInt("IDACCESORIO"));
			dZONADIAGRAMA.setIDALMACEN(rs.getInt("IDALMACEN"));
			dZONADIAGRAMA.setIDDISTRIBUCION(rs.getString("IDDISTRIBUCION"));
			dZONADIAGRAMA.setCOLORHEXADECIMAL(rs.getString("COLORHEXADECIMAL"));
			dZONADIAGRAMA.setFECHACREACION(rs.getTimestamp("FECHACREACION"));
			dZONADIAGRAMA.setESTADO(rs.getInt("ESTADO"));
			dZONADIAGRAMA.setSINCRONIZA(rs.getInt("SINCRONIZA"));
			dZONADIAGRAMA.setTIPO(rs.getString("TIPO"));
			dZONADIAGRAMA.setIDRACK(rs.getInt("IDRACK"));
			dZONADIAGRAMA.setTIPORACK(rs.getString("TIPORACK"));
			l.add(dZONADIAGRAMA);
		}
		return l;
	}
	/****************************FIN************************/
}